# Workflow de CI/CD para Agenda de Estudos
name: CI/CD Pipeline

# Quando executar
on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  # Job de Build e Testes
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout do código
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    # 2. Configurar Java 17
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # 3. Cache das dependências Maven
    - name: 📦 Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    # 4. Executar testes
    - name: 🧪 Run tests
      run: mvn clean test
    
    # 5. Build da aplicação
    - name: 🔨 Build application
      run: mvn clean compile
    
    # 6. Gerar JAR
    - name: 📦 Package application
      run: mvn clean package -DskipTests
    
    # 7. Upload do artefato (JAR)
    - name: 📤 Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: agenda-estudos-jar
        path: target/*.jar
    
    # 8. Relatório de cobertura de testes (opcional)
    - name: 📊 Generate test report
      run: mvn surefire-report:report
      continue-on-error: true

  # Job de Code Quality
  code-quality:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    
    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # Verificar formatação do código (se usar Spotless)
    - name: 🎨 Check code formatting
      run: mvn spotless:check
      continue-on-error: true
